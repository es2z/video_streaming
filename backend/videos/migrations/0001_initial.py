# Generated by Django 5.0.1 on 2025-09-21 15:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='グループ名')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'タググループ',
                'verbose_name_plural': 'タググループ',
                'db_table': 'video_groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScanHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='開始時刻')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完了時刻')),
                ('status', models.CharField(choices=[('running', '実行中'), ('completed', '完了'), ('failed', '失敗')], default='running', max_length=20, verbose_name='ステータス')),
                ('files_scanned', models.IntegerField(default=0, verbose_name='スキャン済みファイル数')),
                ('files_added', models.IntegerField(default=0, verbose_name='追加ファイル数')),
                ('files_updated', models.IntegerField(default=0, verbose_name='更新ファイル数')),
                ('duplicates_found', models.IntegerField(default=0, verbose_name='重複ファイル数')),
                ('errors', models.JSONField(blank=True, default=list, verbose_name='エラー')),
            ],
            options={
                'verbose_name': 'スキャン履歴',
                'verbose_name_plural': 'スキャン履歴',
                'db_table': 'scan_history',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_name', models.CharField(max_length=255, verbose_name='フォルダ名')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='videos.folder', verbose_name='親フォルダ')),
            ],
            options={
                'verbose_name': 'フォルダ',
                'verbose_name_plural': 'フォルダ',
                'db_table': 'folders',
                'ordering': ['parent__id', 'folder_name'],
                'unique_together': {('folder_name', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=100, unique=True, verbose_name='タグ名')),
                ('usage_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='使用回数')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='tags', to='videos.group', verbose_name='所属グループ')),
            ],
            options={
                'verbose_name': 'タグ',
                'verbose_name_plural': 'タグ',
                'db_table': 'tags',
                'ordering': ['-usage_count', 'tag_name'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='ファイル名')),
                ('file_path', models.CharField(db_index=True, max_length=255, verbose_name='ファイルパス')),
                ('file_size', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='ファイルサイズ（バイト）')),
                ('md5_hash', models.CharField(db_index=True, max_length=32, verbose_name='MD5ハッシュ')),
                ('video_duration', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='動画の長さ（秒）')),
                ('delete_flag', models.BooleanField(db_index=True, default=False, verbose_name='削除フラグ')),
                ('duplicate_flag', models.BooleanField(db_index=True, default=False, verbose_name='重複フラグ')),
                ('thumbnail_file_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='サムネイルGIFパス')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='メタデータ')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='動画の幅')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='動画の高さ')),
                ('fps', models.FloatField(blank=True, null=True, verbose_name='FPS')),
                ('codec', models.CharField(blank=True, max_length=50, null=True, verbose_name='コーデック')),
                ('bitrate', models.IntegerField(blank=True, null=True, verbose_name='ビットレート')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('folders', models.ManyToManyField(blank=True, related_name='files', to='videos.folder', verbose_name='所属フォルダ')),
                ('tags', models.ManyToManyField(blank=True, related_name='files', to='videos.tag', verbose_name='タグ')),
            ],
            options={
                'verbose_name': 'ファイル',
                'verbose_name_plural': 'ファイル',
                'db_table': 'files',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['file_size', 'md5_hash'], name='files_file_si_9d1719_idx'), models.Index(fields=['delete_flag', 'duplicate_flag'], name='files_delete__2332b5_idx')],
            },
        ),
    ]
