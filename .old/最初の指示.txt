# 概要
自宅用の動画配信サイト/webアプリを作成したいです(自分以外使用しません)
サイトと言っても､使用者から見れば動画特化のファイラのようなwebアプリを想定しています｡
フロント react,mui,vite
バックエンド windows11上で動くようにdjango,django rest api,mysql,Daphneで動くように作成してください｡
実行PCはWindows11であり､ServerRun.batファイルを実行することでサーバーを実行するようにしてください｡他の環境でサーバーを起動するつもりは現在ありません｡
これは､nssmでサービス化して管理することを念頭に置いてください(サービス化はこちらで行ウノで書く必要はありません)
導入に際してはステップバイステップで行えるようにしてください(以前作成していただいた際に最初にdjangoでプロジェクトを作成する手順が省かれていたため注意してください)
また､以前ダウンロードした際のファイル名と､プログラム内で参照しているファイル名が異なっていたためこれは必ず一致させるようにしてください｡

# フロントの仕様
PC及びiPhone及びandroidタブレットで使います｡

ヘッダーから遷移できるページが以下の5つあります
全ファイル･･･全てのファイル(delete_flagがついているものは表示しない)
全ファイル(フォルダに存在しない)･･･フォルダに全く振り分けられていないファイル
フォルダ･･･フォルダを作成する機能と､全ファイルや他のフォルダからファイルをコピーしてこれるフォルダ
削除ファイル一覧･･･delete_flagを付けたファイルが表示されます｡
重複ファイル一覧･･･duplicate_flagが付いたファイルが表示されます｡

※フォルダという表現をしているが､バックエンドでファイルは1箇所のフォルダにまとまって存在し､それが増えたり移動したりはしない｡
対象のファイルに付けられたfoldersのタグの状態によってどこのフォルダ､ページに存在するか判断しているものとする｡
つまり参照カウンタを付けたハードリンクやシンボリックリンクのようにファイルを扱うという構想である｡

各ページでは､画面上部右側にサムネイル表示と､詳細表示の2つを切り替えるトグルボタンを作ってください｡
各ページはバーチャライゼーションが適用されたテーブルやフレックスボックス(サムネイル表示のこと)の集合と考えてください
フォルダのページについては下層にもフォルダが作れるようにしてください(上部に今居るディレクトリと､上のフォルダに戻るボタンも付けてください)
ファイルビューでは､ここでは右クリックで新しいフォルダを作ることが可能であり､すでにあるフォルダを右クリックないし長押しすると名前を変更することができます｡

また､動画ページのサムネイルは常に動き続けているものとします(これは最初にファイルが追加された際にgifをgifsというフォルダに作り､fileテーブルにファイル参照を相対位置で書き込むような感じで実装してください)
ファイルをシングルクリックすると､新しいタブが開き動画プレイヤーが表示されます(後述のカスタムプレイヤーを使用します)

ファイルを長押し､もしくは右クリックすると以下のメニューが現れます
フォルダへ移動→選択すると既存のフォルダへファイルを移動するメニューを表示､この状態では上部にこのフォルダへ移動ボタンと移動をキャンセルボタンが表示されます｡ フォルダタブのみで表示されます｡
フォルダへコピー→選択すると既存のフォルダへファイル参照を追加する｡この状態では上部にこのフォルダへ移動ボタンと移動をキャンセルボタンが表示されます｡ 削除ファイル一覧タブ以外で表示されます｡｡
ファイルを削除する→フォルダのページでのみ表示､対象のフォルダへの所属を消します｡
ファイルにdelete_flagを付与する→delete_flagをtrueとして削除ファイル一覧でのみ表示されるようになります｡削除ファイル一覧タブ以外で表示されます｡フォルダ情報は削除しません｡
タグを追加する→タグを追加する画面を開きます｡既存のタグ､よく使うタグ､名前をつけてタグを追加などを行えるようにします｡また､追加するタグ選択は､ジャンル､内容など複数属性で管理出来るものとします(追加時に検索しやすいから属性をつけるだけで､検索は全て一緒くたに検索を行うものとします)
ファイルを復元する→削除ファイル一覧から選択可能､delete_flagをfalseにしてフォルダなどで表示できるようにします｡
ファイルを完全に削除する→普通必要ですが､これは実装しません(Explorerなどで手動で行います)

また､画面上部のサムネイル表示/詳細表示を切り替えるボタンの左に隣に複数ファイルを選択ボタンを追加し､これがtrueになってる状態では複数のファイルを選択可能とします｡
その状態では下側にペインを表示して､フォルダへ移動､ファイルを削除する､ファイルを復元するといった右クリックで有効なメニューが表示され､これをクリックすることですべてのファイルに対して
右クリックメニューと同じ操作を行えるようにします｡


また､動画を閲覧可能なページすべてで以下のボタンを作成してください｡
- 複数動画を選択して開くボタン(押下すると複数動画を選択して開くモードへ遷移)
- 選択をキャンセル(複数動画を開くボタンを押下時のみ出現)
- 選択動画をすべて開く
動画を選択し､選択動画をすべて開くボタンを押下すると画面内に複数のプレイヤーが擬似的なpipとして(プレイヤーは現在のカスタムプレイヤーそのものです)表示されます｡
この状態の場合､動画プレイヤーのメニューに追加で以下のボタンを追加してください
- 自由に動画を配置する / 動画縦横に整理して並べる (切り替え)
- 全ての動画を閉じるボタン
なお､自由に動画を配置するモードの場合､プレイヤー内でピンチでプレイヤーサイズを拡大&縮小､ドラッグアンドドロップで場所の移動が行えるものとします
上下左右に並べる場合､ドラッグドロップで縦方向､横方向のセルに動画を配置できるようにします(VSコードでウィンドウを移動させたときのように縦横方向に自動的にリサイズされる感じで､また縦横幅を調整できるイメージです)
※ドラッグ&ドロップは プレイヤーの上部60%程度のみ反応するようにします (下部40%はフリックで先に進めたりもドルが割り当てられているため)


## 動画プレイヤーの詳細仕様
動画プレイヤーはカスタムで作成して実装してください｡
プレイヤーには以下の機能が実装してください｡
ライブラリを使用してもよいですが､多数の機能を含めたいため､全ての実装が難しいならば独自に実装し､切り替えられるようにしてください｡
- 極めて滑らかなA-Bループに対応してください｡これは､非常に優先順位が高いです｡ 秒数指定と､再生している時間を開始時刻､終了時刻に設定するの両方のメニューを作成して下し時｡
- 動画の無限ループ､順番に再生を切り替えられるボタンを作成してください｡無限ループはA-Bループと同様に極めて滑らかである必要があります｡
- 動画のprev,nextボタンを追加し､フォルダ内の次のファイル前のファイルに移動できるようにしてください｡
- 動画の再生速度を0.1-5倍速程度まで0.05倍速刻みで簡単に変更できるUIを作成してください｡0.25,0.5,0.75,1,1.1,1.25,1.5,1.75,2倍速に変更できるボタンも同じUI内に含めてください｡
- 右上にオプションメニューをつけ､再生中の動画の名前変更､タグ付け､フォルダコピー/移動が出来るようにしてください(動画再生中に半透明で行えるUIとしてください)
- 動画画面を長押しすると､その間2倍速で再生するようにしてください｡
- 動画の左35%をダブルタップすると､5秒間巻き戻してください｡ また､動画の右35%をダブルタップすると､5秒間スキップしてください｡ これは､グローバルな設定項目を作成して変更できるようにします(たとえばjotai+ローカルストレージで管理)
- 動画の中央をシングルタップすると､再生と停止を切り替えられるようにしてください｡
- ピンチで拡大と縮小を行う｡
- プレイヤーの下部40%の範囲を左右にフリックした場合動画を先に進めたり戻したりを行える
- プレイヤーの下部をタップすると､停止再生ではなくオーバーレイでシークバーを表示しシーク可能にする｡
- メニューに以下の2つのメニューをトグルで配置して切り替えられるようにしてください｡
   - アスペクト比で拡大
   - 長辺で拡大してはみ出す箇所を表示しない
- 追加で動画を開く
   ボタンを押下すると以下の状態になります｡
   1. 動画が停止され隠されます｡
   2. 数動画を選択して開くボタンを押したのと同じ状態になります(初期状態は､現在再生中の動画が選択されている状態です)
   3. 選択動画をすべて開くボタンが押下されると複数のプレイヤーが表示されます｡

#バックエンドの仕様
ファイルごとに以下を作成してください｡  
ただし､他に社会通念上必要であるようなキーやまとめられるものは変更していただいても構いません｡

fileテーブル
file_name(string系)
file_size(int)
md5_hash(固定長string)
video_duration(float?)
folders(所属するフォルダ群おそらくfolderに対する複数参照キー)
tags(json filed)
delete_flag(boolean)
duplicate_flag(boolean)
thumbnail_file_path(file filed?)

folderテーブル
folder_name(string)系

tagsテーブル
tag_name(string)
group(many to many?)
usage_count(int)※そんなにシビアに扱わなくて良い

group
name(string)

フォルダは以下の2つを作ってください｡
videos(全ての有効なファイルが入る)
gifs(videosから作った先頭10秒のgif(10秒未満の動画は動画と同じ長さ))

サーバーでは､サーバー起動時､起動時から6時間毎､フロントエンドから  ${endpoint名}/force_refresh にget命令が出された際にファイルを全て検査し直すとします｡
ファイル名とファイルサイズがDBに存在する場合検査はスキップ
そうでない場合はテーブルに適切な情報を格納します(処理はテーブル名を見て判断してください)
ただし､md5はファイルサイズの関係で非常に算出に時間がかかるため､ffmpegを使用して最初のキーフレームまでをffmpeg上でコピーして算出してください｡
ファイルサイズとmd5タグの両方が既存のDBに存在するデータと合致するファイルにはduplicate_flagを付与します(これは新しいファイルと､DBにすでに存在するファイルの両方に)